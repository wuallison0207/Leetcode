class Solution(object):
    def search(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: int
        """
        if not nums: return -1
        if target < nums[0] and target > nums[-1]: return -1
        lo, hi = 0, len(nums)-1
        while lo < hi:
            mid = lo+(hi-lo)/2
            if nums[mid] > nums[hi]:
                lo = mid+1
            else:
                hi = mid
                
        vot = lo
        #regular binary search
        lo, hi = 0, len(nums)-1
        while lo <= hi:
            mid = lo+(hi-lo)/2
            realmid = (mid+vot)%len(nums)
            if nums[realmid] < target:
                lo = mid+1
            elif nums[realmid] > target:
                hi = mid-1
            else:
                return realmid
        return -1
