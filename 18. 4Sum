class Solution(object):
    def fourSum(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: List[List[int]]
        """
        result, results = [], []
        nums.sort()
        self.findNSum(nums, 4, target, result, results)
        return results
    
    def findNSum(self, nums, N, target, result, results):
        if len(nums) < N or N < 2 or target < nums[0]*N or target > nums[-1]*N:
            return
        
        if N == 2:
            l, r = 0, len(nums)-1
            while l<r:
                if nums[l] + nums[r] == target:
                    results.append(result+[nums[l], nums[r]])
                    while l < r and nums[l] == nums[l+1]:
                        l += 1
                    while r > l and nums[r] == nums[r-1]:
                        r -= 1
                    l += 1
                    r -= 1
                elif nums[l]+nums[r] > target:
                    r -= 1
                else:
                    l += 1
        else:
            for i in range(len(nums)-N+1):
                if i == 0 or nums[i] != nums[i-1]:
                    self.findNSum(nums[i+1:], N-1, target-nums[i], result+[nums[i]], results)
