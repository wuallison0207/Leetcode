class Solution(object):
    def countSmaller(self, nums):
        """
        :type nums: List[int]
        :rtype: List[int]
        """
        smaller = [0]*len(nums)
        enum = list(enumerate(nums))
        self.helper(enum, smaller)
        return smaller
        
    def helper(self, inum, smaller):
        half = len(inum)/2
        if half:
            left, right = self.helper(inum[:half], smaller), self.helper(inum[half:], smaller)
            m, n = len(left), len(right)
            i = j = 0
            while i < m or j < n:
                if j == n or (i < m and left[i][1] <= right[j][1]):
                    inum[i+j] = left[i]
                    smaller[left[i][0]] += j
                    i += 1
                else:
                    inum[i+j] = right[j]
                    j += 1
        return inum
