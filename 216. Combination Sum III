class Solution(object):
    def combinationSum3(self, k, n):
        """
        :type k: int
        :type n: int
        :rtype: List[List[int]]
        """
        res = []
        self.helper(res, k, n, [], 1)
        return res
    
    def helper(self, res, k, n, path, start):
        if len(path) > k:
            return 
        if len(path) == k and sum(path) == n:
            res.append(path)
            return
        for i in range(start, 10):
            self.helper(res, k, n, path+[i], i+1)
