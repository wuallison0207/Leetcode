class Solution(object):
    def maxCoins(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        inum = [0]*(len(nums)+2)
        
        n = 1
        for v in nums:
            inum[n] = v
            n += 1
        
        inum[0] = inum[n] = 1
        memo = [[0]*(n+1) for _ in range(n+1)]
        return self.helper(0, n, inum, memo)
        
            
        
    def helper(self, left, right, inum, memo):
        if left == right-1: return 0
        if memo[left][right] > 0: return memo[left][right]
        ans = 0
        for k in range(left+1, right):
            ans = max(ans, inum[left]*inum[k]*inum[right]+self.helper(left, k, inum, memo)+self.helper(k,right, inum, memo))
        memo[left][right] = ans
        return ans
