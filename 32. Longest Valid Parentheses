class Solution(object):
    def longestValidParentheses(self, s):
        """
        :type s: str
        :rtype: int
        """
        longest = [0]*len(s)
        curMax = 0
        for i in range(1, len(s)):
            if s[i] == ')':
                if s[i-1] == '(':
                    if i-1>0:
                        longest[i] = longest[i-2]+2
                        curMax = max(curMax, longest[i])
                    else:
                        longest[i] = 2
                        curMax = max(curMax, longest[i])
                else: # s[i-1] == ')'
                    if i-longest[i-1] -1 >= 0 and s[i-longest[i-1]-1] == '(':
                        if i-longest[i-1] -1 > 0:
                            longest[i] = longest[i-1]+2+longest[i-longest[i-1]-2]
                            curMax = max(curMax, longest[i])
                        else:
                            longest[i] = longest[i-1]+2
                            curMax = max(curMax, longest[i])
                   
        return curMax
