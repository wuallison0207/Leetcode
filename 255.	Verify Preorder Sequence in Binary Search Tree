# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def verifyPreorder(self, preorder):
        """
        :type root: list[int]
        :rtype: boolean
        """
        return self.helper(preorder, o, len(preorder)-1, float('Inf'), float('-Inf'))
        
    def helper(self, preorder, start, end, less, more):
        if start > end: return True
        val, idx = preorder[start], 0
        if val >=less or val <= more:
              return False
        for i in range(start+1, end+1):
          
          if preorder[i] > val:
              break
          i += 1
        return self.helper(preorder, start+1, i-1, val, more) and self.helper(preorder, i, end, less, val)
